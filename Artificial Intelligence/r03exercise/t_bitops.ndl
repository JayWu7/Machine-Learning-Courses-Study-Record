
(* Manipulation of bit-vectors by the operations of
     increment +1,
     shift left, and::
     inverting some of the bottom bits.
   Objective: obtain the goal vector with fewest possible operations.
*)

type bits = [0..5];

decl B[bits] : bool;

(* Incrementing a 6 bit vector:
   Turn vwxyz0 to vwxyz1
   Turn vwxy01 to vwxy10
   Turn vwx011 to vwx100
   Turn vw0111 to vw1000
   Turn v01111 to v10000
   Turn 011111 to 100000
*)



(* Shift: Turn uvwxyz to vwxyz0 *)

action shift()
true
=>
B[5] := B[4];
B[4] := B[3];
B[3] := B[2];
B[2] := B[1];
B[1] := B[0];
B[0] := 0;

initial
B[0] := 1;

(* Goal vector is 111010. *)

goal B[5] & B[4] & B[3] & not B[2] & B[1] & not B[0];
